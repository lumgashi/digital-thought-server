// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("db.url")
}

model User {
  id                   String    @id @default(auto()) @map("_id") @db.ObjectId
  email                String    @unique
  firstName            String?
  lastName             String?
  handle               String    @unique
  birthday             DateTime?
  gender               String?
  phone                String?
  role                 String
  password             String?
  passwordResetToken   String?
  avatar               String?
  isActive             Boolean   @default(true)
  dummy                Dummy?
  posts                Post[]    @relation(name: "authorPosts")
  // collaboratingPosts Post[]     @db.ObjectId 
  collaboratorsPostIds String[]  @db.ObjectId
  collaboratingPosts   Post[]    @relation(name: "collaborators", fields: [collaboratorsPostIds], references: [id])
  lastLoginAt          DateTime?
  referalcode          String    @unique
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt

  @@map(name: "users")
}

model Post {
  id                     String   @id @default(auto()) @map("_id") @db.ObjectId
  title                  String
  content                String
  author                 User     @relation(name: "authorPosts", fields: [authorId], references: [id])
  authorId               String   @unique @db.ObjectId
  collaboratingAuthors   User[]   @relation(name: "collaborators", fields: [collaboratorsAuthorIds], references: [id])
  collaboratorsAuthorIds String[] @db.ObjectId
  //TODO : add categories,Likes,Comments,Shares, images etc models


  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt

  @@map(name: "posts")
}

model Dummy {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  name      String?
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map(name: "dummy")
}
